// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:kalpeshisgood50@database-1.ctu2kqqa04su.eu-north-1.rds.amazonaws.com:5432/postgres"
}

model HOD {
  id       Int      @id @default(autoincrement())
  username String   @unique
  password String
}

model Class {
  id         Int       @id @default(autoincrement())
  name       String

}

model Teacher {
  id       Int      @id @default(autoincrement())
  name     String
  username  String  @unique
  password  String
  class      String      // e.g., "TY", "SY"

}


model Student {
  id         Int          @id @default(autoincrement())
  rollNo     Int
  name       String
  class      String      // e.g., "TY", "SY"
  batch      String      // e.g.,  "T1"
  attendance Attendance[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Subject {
  id         Int          @id @default(autoincrement())
  name       String
  class      String      // e.g., "TY", "SY"
  type       String
  attendance Attendance[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Attendance {
  id        Int      @id @default(autoincrement())
  date      DateTime @db.Date
  time      String
  isPresent Boolean
  student   Student  @relation(fields: [studentId], references: [id])
  studentId Int
  subject   Subject  @relation(fields: [subjectId], references: [id])
  subjectId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([studentId, subjectId, date, time])
}
